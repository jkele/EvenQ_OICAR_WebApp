@model Eveq_Oicar_web.Models.Event

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@{
    string[] Coordinates = new string[Model.Location.Coordinates.Length];

    Coordinates = Model.Location.Coordinates.Split(new string[] { "," }, StringSplitOptions.None);
}


<div class="form-group text-center" style="border-radius: 5px; margin-top: 2em; margin-left: 5em; overflow: auto; float: left;">
    <div class="form-group text-center" style=" background-color: rgba(0, 0, 0, 0.3);">
        <div class="form-group" style="margin-top: 10px;">

            @{
                if (Model.PosterImage != null)
                {
                    string imreBase64Data = Convert.ToBase64String(Model.PosterImage);
                    string imgDataURL = string.Format("data:image/png;base64,{0}", imreBase64Data);

                    <img style="margin-top: 10px;" src="@imgDataURL" width="250" />
                }
                else
                {
                    <img style="margin-top: 10px;" src="~/img/No_Image_Available.jpg" width="250" />
                }
            }

        </div>

        <div class="form-group">

            <label class="control-label with-font" style="font-weight: 800; font-size: large;">Title: </label>
            <label class="control-label with-font" style="font-weight: 800; font-size: large;">  @Html.DisplayFor(model => model.Title) </label>
            <br />

        </div>

        <div class="form-group">

            <label class="control-label with-font" style="font-weight: 800; font-size: large;">Description: </label>
            <label class="control-label with-font" style="font-weight: 800; font-size: large;">          @Html.DisplayFor(model => model.Description) </label>
            <br />

        </div>


        <div class="form-group">

            <label class="control-label with-font" style="font-weight: 800; font-size: large;">Date: </label>
            <label class="control-label with-font" style="font-weight: 800; font-size: large;">
                @{
                    String date = Model.Date.ToString("dd/MM/yyyy - HH/mm tt") + "h";
                    @Html.DisplayFor(date => date.Date)
                }

            </label>
            <br />

        </div>


        <div class="form-group">

            <label class="control-label with-font" style="font-weight: 800; font-size: large;">City: </label>
            <label class="control-label with-font" style="font-weight: 800; font-size: large;">  @Html.DisplayFor(model => model.Location.City) </label>
            <br />

        </div>

        <div class="form-group">

            <label class="control-label with-font" style="font-weight: 800; font-size: large;">Street: </label>
            <label class="control-label with-font" style="font-weight: 800; font-size: large;">  @Html.DisplayFor(model => model.Location.Street) </label>
            <br />

        </div>

        <div class="form-group">

            <label class="control-label with-font" style="font-weight: 800; font-size: large;">Coordinates: </label>
            <br />
        </div>

        <div class="form-group" style="width: 200px; height: 200px" id="dvMap">
        </div>

        <div class="form-group">

            <label class="control-label with-font" style="font-weight: 800; font-size: large;">Ticket Price: </label>
            <label class="control-label with-font" style="font-weight: 800; font-size: large;"> @Html.DisplayFor(model => model.TicketPrice) </label>
            <label class="control-label with-font" style="font-weight: 800; font-size: large;">€</label>
            <br />

        </div>
        <div>
            <a style="margin-top: 10px; width: 100%;" class="btn btn-light" asp-action="Index">Back to Events list</a>
        </div>

    </div>
</div>


<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB9vfyy7y8oK63Jqgho7S975nu6oJKT8oM"></script>
<script type="text/javascript">
        var markers = @Html.Raw(Coordinates);
        window.onload = function () {
            var mapOptions = {
                center: new google.maps.LatLng(parseInt(markers[0].lat), parseInt(markers[1].lng)),
                zoom: 8,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };
            var infoWindow = new google.maps.InfoWindow();
            var map = new google.maps.Map(document.getElementById("dvMap"), mapOptions);
            for (i = 0; i < markers.length; i++) {
                var data = markers[i]
                var myLatlng = new google.maps.LatLng(data.lat, data.lng);
                var marker = new google.maps.Marker({
                    position: myLatlng,
                    map: map,
                    title: data.title
                });
                (function (marker, data) {
                    google.maps.event.addListener(marker, "click", function (e) {
                        infoWindow.setContent(data.description);
                        infoWindow.open(map, marker);
                    });
                })(marker, data);
            }
        }
</script>